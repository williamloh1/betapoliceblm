women.sample <- women[sample (1:nrow(women), nrow(women), replace=T),]
bootstrapped.reserved[[i]] <- coef (lm (water~reserved, data=women.sample))[2]
}
mean(unlist(bootstrapped.reserved))
sd(unlist(bootstrapped.reserved))
low.boot.reserved.coef <- mean(unlist(bootstrapped.reserved))-qt(0.975, 320)*sd(unlist(bootstrapped.reserved))
high.boot.reserved.coef <-mean(unlist(bootstrapped.reserved))+qt(0.975, 320)*sd(unlist(bootstrapped.reserved))
paste("The 95% CI for the bootstrapeed reserved treatment is between", low.boot.reserved.coef, "and", high.boot.reserved.coef)
model.2 <- lm(water~reserved + irrigation + water +female, data=women)
model.2 <- lm(water ~ reserved + irrigation + female, data=women)
summary(model.2)
model.2 <- lm(water ~ reserved + irrigation, data=women)
summary(model.2)
low.reserved.coef <- model.2$coefficients["reserved"]-qnorm(0.975)*sqrt(vcov(model.2)["reserved","reserved"])
high.reserved.coef.2 <- 9.252+qt(0.975, 320)*3.948
low.reserved.coef.2 <- model.2$coefficients["reserved"]-qnorm(0.975)*sqrt(vcov(model.2)["reserved","reserved"])
paste("The 95% CI for the controlled reserved treatment is between", low.reserved.coef.2, "and", high.reserved.coef.2)
rm(list = ls())
#Group assignment
women <- read.csv("https://raw.githubusercontent.com/kosukeimai/qss/master/PREDICTION/women.csv")
model <- lm(water~reserved, data=women)
summary(model)
low.reserved.coef <- 9.252-qt(0.975, 320)*3.948
high.reserved.coef <- 9.252+qt(0.975, 320)*3.948
paste("The 95% CI for the reserved treatment is between", low.reserved.coef, "and", high.reserved.coef)
#using bootstrapped standard errors
set.seed(999)
bootstrapped.reserved <- list()
for (i in 1:1000){
women.sample <- women[sample (1:nrow(women), nrow(women), replace=T),]
bootstrapped.reserved[[i]] <- coef(lm (water~reserved, data=women.sample))[2]
}
mean(unlist(bootstrapped.reserved))
sd(unlist(bootstrapped.reserved))
low.boot.reserved.coef <- mean(unlist(bootstrapped.reserved))-qt(0.975, 320)*sd(unlist(bootstrapped.reserved))
high.boot.reserved.coef <-mean(unlist(bootstrapped.reserved))+qt(0.975, 320)*sd(unlist(bootstrapped.reserved))
paste("The 95% CI for the bootstrapeed reserved treatment is between", low.boot.reserved.coef, "and", high.boot.reserved.coef)
########  With controls
model.2 <- lm(water ~ reserved + irrigation, data=women)
summary(model.2)
low.reserved.coef.2 <- model.2$coefficients["reserved"] - qnorm(0.975)*sqrt(vcov(model.2)["reserved","reserved"])
high.reserved.coef.2 <- model.2$coefficients["reserved"] + qnorm(0.975)*sqrt(vcov(model.2)["reserved","reserved"])
paste("The 95% CI for the controlled reserved
for (i in 1:1000){
women.sample <- women[sample (1:nrow(women), nrow(women), replace=T),]
bootstrapped.reserved.2[[i]] <- coef(lm (water~reserved+irrigation, data=women.sample))[2]
}
bootstrapped.reserved.2 <- list()
for (i in 1:1000){
women.sample <- women[sample (1:nrow(women), nrow(women), replace=T),]
bootstrapped.reserved.2[[i]] <- coef(lm (water~reserved+irrigation, data=women.sample))[2]
}
bootstrapped.reserved <- list()
for (i in 1:1000){
women.sample <- women[sample (1:nrow(women), nrow(women), replace=T),]
bootstrapped.reserved[[i]] <- coef(lm (water~reserved, data=women.sample))[2]
}
mean(unlist(bootstrapped.reserved))
sd(unlist(bootstrapped.reserved))
low.boot.reserved.coef <- mean(unlist(bootstrapped.reserved))-qt(0.975, 320)*sd(unlist(bootstrapped.reserved))
high.boot.reserved.coef <-mean(unlist(bootstrapped.reserved))+qt(0.975, 320)*sd(unlist(bootstrapped.reserved))
paste("The 95% CI for the bootstrapeed reserved treatment is between", low.boot.reserved.coef, "and", high.boot.reserved.coef)
mean(unlist(bootstrapped.reserved.2))
model.2 <- lm(water ~ reserved + irrigation, data=women)
summary(model.2)
low.reserved.coef.2 <- model.2$coefficients["reserved"] - qnorm(0.975)*sqrt(vcov(model.2)["reserved","reserved"])
high.reserved.coef.2 <- model.2$coefficients["reserved"] + qnorm(0.975)*sqrt(vcov(model.2)["reserved","reserved"])
paste("The 95% CI for the controlled reserved treatment is between", low.reserved.coef.2, "and", high.reserved.coef.2)
#using bootstrapped standard errors
set.seed(999)
bootstrapped.reserved.2 <- list()
for (i in 1:1000){
women.sample <- women[sample (1:nrow(women), nrow(women), replace=T),]
bootstrapped.reserved.2[[i]] <- coef(lm (water~reserved+irrigation, data=women.sample))[2]
}
mean(unlist(bootstrapped.reserved.2))
sd(unlist(bootstrapped.reserved.2))
low.boot.reserved.coef.2 <- mean(unlist(bootstrapped.reserved))-qt(0.975, 320)*sd(unlist(bootstrapped.reserved))
low.boot.reserved.coef.2 <- mean(unlist(bootstrapped.reserved.2))-qt(0.975, 320)*sd(unlist(bootstrapped.reserved.2))
high.boot.reserved.coef.2 <-mean(unlist(bootstrapped.reserved.2))+qt(0.975, 320)*sd(unlist(bootstrapped.reserved.2))
paste("The 95% CI for the bootstrapeed reserved treatment is between", low.boot.reserved.coef.2, "and", high.boot.reserved.coef.2)
#group assignment
palestinians<- read.csv("https://jmontgomery.github.io/ProblemSets/longo.csv")
my.model <- lm(militancy~ZA+Sample2009+Sample2009*ZA, data = palestinians)
library(sjPlot)
plot_model(my.model, type="int")
summary(my.model)
for(i in 1:33){
res_hw[[i]] <- (page_contents(i, stateLinks = stateLinks))
tempo.text.1 <- unlist(str_split(unlist(res_hw[[i]]), pattern = "\\n\\s|\\s|—"))
data.frame[i, 2] <- sum(str_count(tempo.text.1, pattern = regex("fundrais|^fund", ignore_case = T)))
data.frame[i, 3] <- sum(str_count(tempo.text.1, pattern = regex("migr|migrant", ignore_case = T)))
}
########  Slide 27  ########
####
rm(list = ls())
library(tidyverse)
library(rvest)
arkansas_url<-"https://ballotpedia.org/United_States_Senate_elections_in_Arkansas,_2014"
arkansas_page<-read_html(arkansas_url)
stateLinks<-arkansas_page %>%
html_nodes('small center a') %>%
html_attr('href')
stateLinks
page_contents <- function(x, stateLinks){
thisUrl <- paste0("https://ballotpedia.org", stateLinks[x])
table.out <- read_html(thisUrl) %>%
html_nodes('p') %>%
html_text()
return(table.out)
}
res_hw <- as.list(c())
fundraising <- NA
immigration <- NA
data.frame <- cbind(stateLinks, fundraising, immigration)
data.frame
for(i in 1:33){
res_hw[[i]] <- (page_contents(i, stateLinks = stateLinks))
tempo.text.1 <- unlist(str_split(unlist(res_hw[[i]]), pattern = "\\n\\s|\\s|—"))
data.frame[i, 2] <- sum(str_count(tempo.text.1, pattern = regex("fundrais|^fund", ignore_case = T)))
data.frame[i, 3] <- sum(str_count(tempo.text.1, pattern = regex("migr|migrant", ignore_case = T)))
}
View(data.frame)
stateLinks
page_contents <- function(x, stateLinks){
thisUrl <- paste0("https://ballotpedia.org", stateLinks[x])
table.out <- read_html(thisUrl) %>%
html_nodes('p') %>%
html_text()
return(table.out)
}
res_hw <- as.list(c())
fundraising <- NA
immigration <- NA
data.frame <- cbind(stateLinks, fundraising, immigration)
data.frame
data.frame
for(i in 1:33){
res_hw[[i]] <- (page_contents(i, stateLinks = stateLinks))
tempo.text.1 <- unlist(str_split(unlist(res_hw[[i]]), pattern = "\\n\\s|\\s|—"))
data.frame[i, 2] <- sum(str_count(tempo.text.1, pattern = regex("fundrais|^fund", ignore_case = T)))
data.frame[i, 3] <- sum(str_count(tempo.text.1, pattern = regex("migr|migrant", ignore_case = T)))
}
stateLinks<-arkansas_page %>%
html_nodes('small center a') %>%
html_attr('href')
stateLinks[3] <- "/United_States_Senate_elections_in_Alaska,_2014"
page_contents <- function(x, stateLinks){
thisUrl <- paste0("https://ballotpedia.org", stateLinks[x])
table.out <- read_html(thisUrl) %>%
html_nodes('p') %>%
html_text()
return(table.out)
}
res_hw <- as.list(c())
fundraising <- NA
immigration <- NA
data.frame <- cbind(stateLinks, fundraising, immigration)
data.frame
stateLinks[3] <- "/United_States_Senate_elections_in_Arkansas,_2014"
page_contents <- function(x, stateLinks){
thisUrl <- paste0("https://ballotpedia.org", stateLinks[x])
table.out <- read_html(thisUrl) %>%
html_nodes('p') %>%
html_text()
return(table.out)
}
res_hw <- as.list(c())
fundraising <- NA
immigration <- NA
data.frame <- cbind(stateLinks, fundraising, immigration)
data.frame
data.frame
for(i in 1:33){
res_hw[[i]] <- (page_contents(i, stateLinks = stateLinks))
tempo.text.1 <- unlist(str_split(unlist(res_hw[[i]]), pattern = "\\n\\s|\\s|—"))
data.frame[i, 2] <- sum(str_count(tempo.text.1, pattern = regex("fundrais|^fund", ignore_case = T)))
data.frame[i, 3] <- sum(str_count(tempo.text.1, pattern = regex("migr|migrant", ignore_case = T)))
}
View(data.frame)
View(data.frame)
ggplot(data=data.frame, mapping=aes(x=stateLinks, y=fundraising)) +
geom_boxplot()+
coord_flip()
View(data.frame)
as.data.frame(data.frame)
ggplot(data=data.frame, mapping=aes(x=stateLinks, y=fundraising)) +
geom_boxplot()+
coord_flip()
data.frane <- as.data.frame(data.frame)
ggplot(data=data.frame, mapping=aes(x=stateLinks, y=fundraising)) +
geom_boxplot()+
coord_flip()
data.frane <- as.data.frame(data.frame)
data.frame <- as.data.frame(data.frame)
ggplot(data=data.frame, mapping=aes(x=stateLinks, y=fundraising)) +
geom_boxplot()+
coord_flip()
states <- str_split(stateLinks, pattern = regex(\\_), ignore_case = T)
states <- str_split(stateLinks, pattern = regex(_), ignore_case = T)
states <- str_split(stateLinks, pattern = regex("\\_"), ignore_case = T)
states <- str_split(stateLinks, pattern = regex("\\_", ignore_case = T))
states
states[[1]]
states[[1]][-2]
res_hw <- as.list(c())
states <- str_split(stateLinks, pattern = regex("\\_", ignore_case = T))[[6]]
states
states <- str_split(stateLinks, pattern = regex("\\_", ignore_case = T))
states
states[1]
states[1][6]
states[1][[6]]
states[1][6]
states[1]
unlist(states[1])
unlist(states[1])[6]
for(i in 1:33){
states <- unlist(states[i])[6]
}
states
res_hw <- as.list(c())
states <- str_split(stateLinks, pattern = regex("\\_", ignore_case = T))
for(i in 1:33){
states <- unlist(states[i])[6]
}
states
states <- str_split(stateLinks, pattern = regex("\\_", ignore_case = T))
states
for(i in 1:33){
states[i] <- unlist(states[i])[6]
}
states
res_hw <- as.list(c())
states <- str_split(stateLinks, pattern = regex("\\_", ignore_case = T))
for(i in 1:33){
states[i] <- unlist(states[i])[6]
}
fundraising <- NA
immigration <- NA
data.frame <- cbind(states, fundraising, immigration)
data.frame
for(i in 1:33){
res_hw[[i]] <- (page_contents(i, stateLinks = stateLinks))
tempo.text.1 <- unlist(str_split(unlist(res_hw[[i]]), pattern = "\\n\\s|\\s|—"))
data.frame[i, 2] <- sum(str_count(tempo.text.1, pattern = regex("fundrais|^fund", ignore_case = T)))
data.frame[i, 3] <- sum(str_count(tempo.text.1, pattern = regex("migr|migrant", ignore_case = T)))
}
for(i in 1:33){
res_hw[[i]] <- (page_contents(i, stateLinks = stateLinks))
tempo.text.1 <- unlist(str_split(unlist(res_hw[[i]]), pattern = "\\n\\s|\\s|—"))
data.frame[i, 2] <- sum(str_count(tempo.text.1, pattern = regex("fundrais|^fund", ignore_case = T)))
data.frame[i, 3] <- sum(str_count(tempo.text.1, pattern = regex("migr|migrant", ignore_case = T)))
}
data.frame <- as.data.frame(data.frame)
ggplot(data=data.frame, mapping=aes(x=stateLinks, y=fundraising)) +
geom_boxplot()+
coord_flip()
ggplot(data=data.frame, mapping=aes(x=states, y=c(fundraising, immigration)) +
ggplot(data=data.frame, mapping=aes(x=states, y=c(fundraising, immigration)) +
data.frame <- as.data.frame(data.frame)
data.frame <- as.data.frame(data.frame)
ggplot(data=data.frame, mapping=aes(x=states, y=c(fundraising, immigration)) +
ggplot(data=data.frame, mapping=aes(x=states, y=c(fundraising, immigration))) +
geom_boxplot()+
coord_flip()
ggplot(data=data.frame, mapping=aes(x=states, y=c(fundraising, immigration))) +
geom_boxplot()+
coord_flip()
View(data.frame)
ggplot(data=data.frame, mapping=aes(x=states, y=c(fundraising))) +
geom_boxplot()+
coord_flip()
ggplot(data=data.frame, mapping=aes(x=states, y=fundraising)) +
geom_boxplot()+
coord_flip()
ggplot(data=data.frame, mapping=aes(x=states, y=fundraising)) +
geom_boxplot()+
coord_flip()
states
data.frame <- as.data.frame(data.frame)
ggplot(data=data.frame, mapping=aes(x=states, y=fundraising)) +
geom_boxplot()+
coord_flip()
ggplot(data=data.frame, mapping=aes(x=fundraising, y =states)) +
geom_boxplot()+
coord_flip()
View(data.frame)
for(i in 1:33){
res_hw[[i]] <- (page_contents(i, stateLinks = stateLinks))
tempo.text.1 <- unlist(str_split(unlist(res_hw[[i]]), pattern = "\\n\\s|\\s|—"))
data.frame[i, 2] <- sum(str_count(tempo.text.1, pattern = regex("fundrais|^fund", ignore_case = T)))
data.frame[i, 3] <- sum(str_count(tempo.text.1, pattern = regex("migr|migrant", ignore_case = T)))
}
for(i in 1:33){
res_hw[[i]] <- (page_contents(i, stateLinks = stateLinks))
tempo.text.1 <- unlist(str_split(unlist(res_hw[[i]]), pattern = "\\n\\s|\\s|—"))
data.frame[i, 2] <- sum(str_count(tempo.text.1, pattern = regex("fundrais|^fund", ignore_case = T)))
data.frame[i, 3] <- sum(str_count(tempo.text.1, pattern = regex("migr|migrant", ignore_case = T)))
}
ata.frame <- as.data.frame(data.frame)
ggplot(data=data.frame, mapping=aes(x=fundraising, y =states)) +
geom_boxplot()+
coord_flip()
ggplot(data=data.frame, aes(x = states, y = states)) +
geom_boxplot()+
coord_flip()
View(data.frame)
ggplot(data=data.frame, aes(x = as.numeric(states), y = states)) +
geom_boxplot()+
coord_flip()
ggplot(data=data.frame, aes(x = states, y = states)) +
geom_boxplot()+
coord_flip()
View(data.frame)
ggplot(data=data.frame, aes(x = as.factor(states), y = states)) +
geom_boxplot()+
coord_flip()
ggplot(data=data.frame, aes(x = as.factor(states), y = fundraising)) +
geom_boxplot()+
coord_flip()
ggplot(data=data.frame, aes(x = (states), y = fundraising)) +
geom_boxplot()+
coord_flip()
data.frame <- as.factor(data.frame$states)
data.frame <- as.numeric(data.frame$states)
states
as.character(unlist(states))
states <- as.character(unlist(states))
fundraising <- NA
immigration <- NA
data.frame <- cbind(states, fundraising, immigration)
data.frame
for(i in 1:33){
res_hw[[i]] <- (page_contents(i, stateLinks = stateLinks))
tempo.text.1 <- unlist(str_split(unlist(res_hw[[i]]), pattern = "\\n\\s|\\s|—"))
data.frame[i, 2] <- sum(str_count(tempo.text.1, pattern = regex("fundrais|^fund", ignore_case = T)))
data.frame[i, 3] <- sum(str_count(tempo.text.1, pattern = regex("migr|migrant", ignore_case = T)))
}
data.frame <- as.data.frame(data.frame)
ggplot(data=data.frame, aes(x = (states), y = fundraising)) +
geom_boxplot()+
coord_flip()
ggplot(data=data.frame, aes(x = reoder(states, fundraising), y = fundraising)) +
geom_boxplot()+
coord_flip()
ggplot(data=data.frame, aes(x = reorder(states, fundraising), y = fundraising)) +
geom_boxplot()+
coord_flip()
ggplot(data=data.frame, aes(x = states, y = reorder(fundraising)) +
ggplot(data=data.frame, aes(x = states, y = reorder(fundraising)) +
ggplot(data=data.frame, aes(x = states, y = reorder(fundraising))) +
geom_boxplot()+
coord_flip()
ggplot(data=data.frame, aes(x = states, y = reorder(fundraising))) +
geom_boxplot()+
coord_flip()
ggplot(data=data.frame, aes(x = states, y = fundraising)) +
geom_boxplot()+
coord_flip()
ggplot(data=data.frame, aes(x = states, y = reorder(fundraising, states)) +
ggplot(data=data.frame, aes(x = states, y = reorder(fundraising, states)) +
ggplot(data=data.frame, aes(x = states, y = reorder(fundraising, states))) +
geom_boxplot()+
coord_flip()
ggplot(data=data.frame, aes(x = states, y = reorder(states, fundraising))) +
geom_boxplot()+
coord_flip()
ggplot(data=data.frame, aes(x = states, y = reorder(fundraising, states))) +
geom_boxplot()+
coord_flip()
for(i in 1:33){
res_hw[[i]] <- (page_contents(i, stateLinks = stateLinks))
tempo.text.1 <- unlist(str_split(unlist(res_hw[[i]]), pattern = "\\n\\s|\\s|—"))
data.frame[i, 2] <- as.numeric(sum(str_count(tempo.text.1, pattern = regex("fundrais|^fund", ignore_case = T))))
data.frame[i, 3] <- as.numeric(sum(str_count(tempo.text.1, pattern = regex("migr|migrant", ignore_case = T))))
}
data.frame <- as.data.frame(data.frame)
ggplot(data=data.frame, aes(x = states, y = reorder(fundraising, states))) +
geom_boxplot()+
coord_flip()
data.frame$immigration <- as.numeric(data.frame$immigration)
data.frame$fundraising <- as.numeric(data.frame$fundraising)
ggplot(data=data.frame, aes(x = states, y = reorder(fundraising, states))) +
geom_boxplot()+
coord_flip()
ggplot(data=data.frame, aes(x = reorder(states), y = reorder(fundraising, states))) +
geom_boxplot()+
coord_flip()
ggplot(data=data.frame, aes(x = reorder(states, states), y = reorder(fundraising, states))) +
geom_boxplot()+
coord_flip()
ggplot(data=data.frame, aes(x = states, y = reorder(fundraising, states))) +
geom_boxplot()+
coord_flip()
View(data.frame)
ggplot(data=data.frame, aes(x = states, y = reorder(fundraising, states))) +
geom_boxplot()+
coord_flip()
ggplot(data=data.frame, aes(x = states, y = reorder(fundraising, states))) +
geom_boxplot()+
coord_flip() +
labs(
x="# of Fundraising-Related Words",
y="States",
title = "Number of Fundraising-Related Words in 2014 Senate Race"
)
ggplot(data=data.frame, aes(x = states, y = reorder(fundraising, states))) +
geom_boxplot()+
coord_flip() +
labs(
y="# of Fundraising-Related Words",
x="States",
title = "Number of Fundraising-Related Words in 2014 Senate Race"
)
ggplot(data=data.frame, aes(x = states, y = reorder(fundraising, states))) +
geom_boxplot()+
coord_flip() +
theme() +
labs(
y="# of Fundraising-Related Words",
x="States",
title = "Number of Fundraising-Related Words in 2014 Senate Race"
)
ggplot(data=data.frame, aes(x = states, y = reorder(fundraising, states))) +
geom_boxplot()+
coord_flip() +
theme_light() +
labs(
y="# of Fundraising-Related Words",
x="States",
title = "Number of Fundraising-Related Words in 2014 Senate Race"
)
ggplot(data=data.frame, aes(x = states, y = reorder(immigration, states))) +
geom_boxplot()+
coord_flip() +
theme_light() +
labs(
y="# of Immigration-Related Words",
x="States",
title = "Number of Immigration-Related Words in 2014 Senate Race"
)
ggplot(data=data.frame, aes(x = states, y = reorder(fundraising, states))) +
geom_boxplot()+
coord_flip() +
theme_light() +
labs(
y="# of Fundraising-Related Words",
x="States",
title = "Number of Fundraising-Related Words in 2014 Senate Race"
)
ggplot(data=data.frame, aes(x = states, y = reorder(immigration, states))) +
geom_boxplot()+
coord_flip() +
theme_light() +
labs(
y="# of Immigration-Related Words",
x="States",
title = "Number of Immigration-Related Words in 2014 Senate Race"
)
scrapeResults<-function(x, stateLinks){
thisUrl<-paste0("https://ballotpedia.org", stateLinks[x])
table.out<-read_html(thisUrl) %>%
html_nodes('table.collapsible') %>%
html_table(fill=TRUE)
table.out[[1]]
}
results1<-scrapeResults(1, stateLinks=stateLinks)
results1<-scrapeResults(1, stateLinks=stateLinks)
str(results1)
library(plyr)
names(allResults)<-stateLinks
allResults<-llply(1:length(stateLinks), scrapeResults, stateLinks=stateLinks)
allResults<-llply(1:length(stateLinks), scrapeResults, stateLinks=stateLinks)
names(allResults)<-stateLinks
gs_url<-"https://scholar.google.com/scholar?hl=en&as_sdt=7%2C26&q=political+parties&btnG="
pg1<-gs_url%>%
read_html()%>%
html_nodes(".gs_ri a , .gs_a , .gs_rt") %>%
html_text()
View(results1)
pg1
gs_url<-"https://scholar.google.com/scholar?hl=en&as_sdt=7%2C26&q=political+parties&btnG="
pg1<-gs_url%>%
read_html()%>%
html_nodes(".gs_ri a , .gs_a , .gs_rt") %>%
html_text()
gs_page1<-read_html(gs_url1)
gs_page1<-read_html(gs_url1)
gs_page1<-read_html(gs_url)
pageLinks<-gs_page1 %>%
html_nodes('#gs_n a') %>%
html_attr('href')
pageLinks
results <- c()
for (i in c(1:9)){
thisUrl<-paste0("https://scholar.google.com/", pageLinks[i])
results[[i]]<-read_html(thisUrl) %>%
html_nodes('.gs_or_cit+ a , .gs_a , .gs_rt') %>%
html_text()
}
results
results <- c(pg1, results)
df <- data.frame(matrix(unlist(results), nrow = 100, ncol=3, byrow = T))
df
library(readr)
citations <- as.character(df[,3])
citations.log <- log(parse_number(citations))
df$log.citation <- citations.log
colnames(df) <- c("Result", "Author", "Citation", "Log.Citation")
ggplot(data=df, mapping=aes(x=Result, y=Log.Citation))+
geom_boxplot()+coord_flip()
